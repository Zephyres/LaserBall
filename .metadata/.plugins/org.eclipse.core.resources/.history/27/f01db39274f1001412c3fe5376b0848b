package entity;

import org.newdawn.slick.GameContainer;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.StateBasedGame;

import java.util.Random;
import utility.Vector;

abstract class ProjectileEntity extends Entity {
	private Random r;
	private Vector v;
	private float damage, radius;
	private int counter;
	
	public ProjectileEntity(Vector v, float d) {
		this.v = v;
		damage = d;
		
		r = new Random();
		counter = 0;
		radius = 20;
	}

	public float getDamage() {
		return damage;
	}
	
	public float getRadius() {
		return radius;
	}
	
	public int timeInWorld() {
		return counter;
	}
	
	public void setDamage(float d) {
		damage = d;
	}
	
	public void setRadius(float r) {
		radius = r;
	}
	
	@Override
	public void update(GameContainer gc, StateBasedGame gs, int d)
			throws SlickException {
		changeX(v.getX());
		changeY(v.getY());
		
		if(atWorldEdge() || r.nextInt(getCap()) < 2) {
			getWorld().addObject(new ExplosionCluster(30, getRadius()), getX(), getY());
			getWorld().removeObject(this);
		}
		
		counter++;
	}
	
	abstract public int getCap();
}
