package entity;

import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.StateBasedGame;

public class BlockStructure extends Entity {
	ArrayList<Block> blocks;
	private String schematic;
	
	public BlockStructure(String schematic) {
		this.schematic = schematic;
	}
	
	public void render(GameContainer gc, StateBasedGame gs, Graphics g)
			throws SlickException {
		
	}

	@Override
	public void update(GameContainer gc, StateBasedGame gs, int d)
			throws SlickException {
		if(blocks == null)
			try {
				blocks = parseFile(schematic);
			} catch(Exception e) {
				e.printStackTrace();
			}
	}
	
	private ArrayList<Block> parseFile(String schem) throws Exception {
		Scanner s = new Scanner(new File(schem));
		ArrayList<Block> blocks = new ArrayList<Block>();
		
		for(int j = 0; s.hasNext(); j++) {
			String line = s.nextLine();
			System.out.println(line);
			for(int i = 0; i < line.length(); i++) {
				if(line.toCharArray()[i] == '#') {
					Block block = new Block();
					
					float x = i * 120 + (float) block.getWidth() / 2;
					float y = j * 120 + (float) block.getHeight() / 2;
					
					getWorld().addObject(block, x, y);
					blocks.add(block);
				}
			}
		}
		
		return blocks;
	}
}
